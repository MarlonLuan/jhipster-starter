application {
  config {
    authenticationType oauth2
    cacheProvider no
    devDatabaseType postgresql
    languages [en, pt-br]
  }
  entities *
}

entity Region {
	id UUID,
	regionName String
}

entity Country {
	id UUID,
	countryName String
}

// an ignored comment
/** not an ignored comment */
entity Location {
	id UUID,
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String
}

entity Department {
	id UUID,
	departmentName String required
}

/**
 * Task entity.
 * @author The JHipster team.
 */
entity Task {
	id UUID,
	title String,
	description String
}

/**
 * The Employee entity.
 */
entity Employee {
	id UUID,
	/**
	* The firstname attribute.
	*/
	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	hireDate Instant,
	salary Long,
	commissionPct Long
}

entity Job {
	id UUID,
	jobTitle String,
	minSalary Long,
	maxSalary Long
}

entity JobHistory {
	id UUID,
	startDate Instant,
	endDate Instant,
	language Language
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}

relationship ManyToMany {
	Job{task(title)} to Task{job}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee to Job{employee},
	/**
	* A relationship
	*/
	Department to
	/**
	* Another side of the same relationship
	*/
	Employee{department}
}

relationship ManyToOne {
	Employee{manager} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job,
	JobHistory{department} to Department,
	JobHistory{employee} to Employee
}

dto * with mapstruct
paginate * with pagination
service * with serviceImpl
